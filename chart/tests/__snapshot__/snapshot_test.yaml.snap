templated manifests should match snapshot:
  1: |
    raw: |
      - For a `Deployment` called `foo` have a `ConfigMap` called `foo-configmap`. Then add this annotation to main metadata of your `Deployment`
        configmap.reloader.stakater.com/reload: "foo-configmap"

      - For a `Deployment` called `foo` have a `Secret` called `foo-secret`. Then add this annotation to main metadata of your `Deployment`
        secret.reloader.stakater.com/reload: "foo-secret"

      - After successful installation, your pods will get rolling updates when a change in data of configmap or secret will happen.
  2: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        meta.helm.sh/release-name: RELEASE-NAME
        meta.helm.sh/release-namespace: NAMESPACE
      labels:
        app: RELEASE-NAME-reloader
        app.kubernetes.io/managed-by: Helm
        chart: reloader-2.1.4
        group: com.stakater.platform
        heritage: Helm
        provider: stakater
        release: RELEASE-NAME
        version: v1.4.4
      name: RELEASE-NAME-reloader
      namespace: NAMESPACE
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app: RELEASE-NAME-reloader
          release: RELEASE-NAME
      template:
        metadata:
          labels:
            app: RELEASE-NAME-reloader
            app.kubernetes.io/managed-by: Helm
            chart: reloader-2.1.4
            group: com.stakater.platform
            heritage: Helm
            provider: stakater
            release: RELEASE-NAME
            version: v1.4.4
        spec:
          containers:
            - args:
                - --log-level=info
                - --reload-on-create=true
                - --sync-after-restart=true
              env:
                - name: GOMAXPROCS
                  valueFrom:
                    resourceFieldRef:
                      divisor: "1"
                      resource: limits.cpu
                - name: GOMEMLIMIT
                  valueFrom:
                    resourceFieldRef:
                      divisor: "1"
                      resource: limits.memory
                - name: KUBERNETES_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
              image: ghcr.io/stakater/reloader:v1.4.4
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  path: /live
                  port: http
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: RELEASE-NAME-reloader
              ports:
                - containerPort: 9090
                  name: http
              readinessProbe:
                failureThreshold: 5
                httpGet:
                  path: /metrics
                  port: http
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              securityContext: {}
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: RELEASE-NAME-reloader
  3: |
    apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: Role
    metadata:
      annotations:
        meta.helm.sh/release-name: RELEASE-NAME
        meta.helm.sh/release-namespace: NAMESPACE
      labels:
        app: RELEASE-NAME-reloader
        app.kubernetes.io/managed-by: Helm
        chart: reloader-2.1.4
        heritage: Helm
        release: RELEASE-NAME
      name: RELEASE-NAME-reloader-role
      namespace: NAMESPACE
    rules:
      - apiGroups:
          - ""
        resources:
          - secrets
          - configmaps
        verbs:
          - list
          - get
          - watch
      - apiGroups:
          - apps
        resources:
          - deployments
          - daemonsets
          - statefulsets
        verbs:
          - list
          - get
          - update
          - patch
      - apiGroups:
          - batch
        resources:
          - cronjobs
        verbs:
          - list
          - get
      - apiGroups:
          - batch
        resources:
          - jobs
        verbs:
          - create
          - delete
          - list
          - get
      - apiGroups:
          - ""
        resources:
          - events
        verbs:
          - create
          - patch
  4: |
    apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: RoleBinding
    metadata:
      annotations:
        meta.helm.sh/release-name: RELEASE-NAME
        meta.helm.sh/release-namespace: NAMESPACE
      labels:
        app: RELEASE-NAME-reloader
        app.kubernetes.io/managed-by: Helm
        chart: reloader-2.1.4
        heritage: Helm
        release: RELEASE-NAME
      name: RELEASE-NAME-reloader-role-binding
      namespace: NAMESPACE
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: RELEASE-NAME-reloader-role
    subjects:
      - kind: ServiceAccount
        name: RELEASE-NAME-reloader
        namespace: NAMESPACE
  5: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      annotations:
        meta.helm.sh/release-name: RELEASE-NAME
        meta.helm.sh/release-namespace: NAMESPACE
      labels:
        app: RELEASE-NAME-reloader
        app.kubernetes.io/managed-by: Helm
        chart: reloader-2.1.4
        heritage: Helm
        release: RELEASE-NAME
      name: RELEASE-NAME-reloader
      namespace: NAMESPACE
  6: |
    apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: azimuth-capi-operator
        app.kubernetes.io/version: main
        helm.sh/chart: azimuth-capi-operator-0.1.0
      name: release-name-azimuth-capi-operator
    spec:
      dnsNames:
        - release-name-azimuth-capi-operator.NAMESPACE.svc
        - release-name-azimuth-capi-operator.NAMESPACE.svc.cluster.local
      issuerRef:
        kind: Issuer
        name: release-name-azimuth-capi-operator
      secretName: release-name-azimuth-capi-operator-cert
  7: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: azimuth-capi-operator
        app.kubernetes.io/version: main
        helm.sh/chart: azimuth-capi-operator-0.1.0
      name: release-name-azimuth-capi-operator
    rules:
      - apiGroups:
          - apiextensions.k8s.io
        resources:
          - customresourcedefinitions
        verbs:
          - list
          - get
          - watch
          - create
      - apiGroups:
          - apiextensions.k8s.io
        resourceNames:
          - clustertemplates.azimuth.stackhpc.com
          - clusters.azimuth.stackhpc.com
          - apptemplates.azimuth.stackhpc.com
        resources:
          - customresourcedefinitions
        verbs:
          - update
          - patch
      - apiGroups:
          - ""
        resources:
          - namespaces
        verbs:
          - list
          - watch
      - apiGroups:
          - ""
          - events.k8s.io
        resources:
          - events
        verbs:
          - create
      - apiGroups:
          - azimuth.stackhpc.com
        resources:
          - '*'
        verbs:
          - '*'
      - apiGroups:
          - ""
        resources:
          - serviceaccounts
        verbs:
          - '*'
      - apiGroups:
          - rbac.authorization.k8s.io
        resources:
          - roles
          - rolebindings
        verbs:
          - '*'
      - apiGroups:
          - ""
        resources:
          - secrets
        verbs:
          - '*'
      - apiGroups:
          - cluster.x-k8s.io
        resources:
          - clusters
          - machinedeployments
          - machines
          - machinehealthchecks
        verbs:
          - '*'
      - apiGroups:
          - bootstrap.cluster.x-k8s.io
        resources:
          - kubeadmconfigtemplates
        verbs:
          - '*'
      - apiGroups:
          - controlplane.cluster.x-k8s.io
        resources:
          - kubeadmcontrolplanes
        verbs:
          - '*'
      - apiGroups:
          - infrastructure.cluster.x-k8s.io
        resources:
          - openstackclusters
          - openstackmachinetemplates
        verbs:
          - '*'
      - apiGroups:
          - addons.stackhpc.com
        resources:
          - '*'
        verbs:
          - '*'
      - apiGroups:
          - apps
        resources:
          - deployments
        verbs:
          - '*'
      - apiGroups:
          - batch
        resources:
          - jobs
        verbs:
          - '*'
      - apiGroups:
          - infrastructure.cluster.x-k8s.io
        resources:
          - openstackmachines
        verbs:
          - list
          - get
          - watch
      - apiGroups:
          - identity.azimuth.stackhpc.com
        resources:
          - realms
        verbs:
          - list
          - get
          - watch
      - apiGroups:
          - identity.azimuth.stackhpc.com
        resources:
          - oidcclients
          - platforms
        verbs:
          - '*'
      - apiGroups:
          - scheduling.azimuth.stackhpc.com
        resources:
          - leases
        verbs:
          - list
          - get
          - watch
          - patch
      - apiGroups:
          - notification.toolkit.fluxcd.io
        resources:
          - alerts
          - providers
          - receivers
        verbs:
          - get
          - list
          - watch
          - patch
          - update
          - create
          - delete
      - apiGroups:
          - source.toolkit.fluxcd.io
        resources:
          - buckets
          - gitrepositories
          - helmcharts
          - ocirepositories
          - helmrepositories
        verbs:
          - get
          - list
          - watch
          - patch
          - update
          - create
          - delete
      - apiGroups:
          - helm.toolkit.fluxcd.io
        resources:
          - helmreleases
        verbs:
          - get
          - list
          - watch
          - patch
          - update
          - create
          - delete
      - apiGroups:
          - kustomize.toolkit.fluxcd.io
        resources:
          - kustomizations
        verbs:
          - get
          - list
          - watch
          - patch
          - update
          - create
          - delete
      - apiGroups:
          - image.toolkit.fluxcd.io
        resources:
          - imagepolicies
          - imagerepositories
          - imageupdateautomations
        verbs:
          - get
          - list
          - watch
          - patch
          - update
          - create
          - delete
  8: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: azimuth-capi-operator
        app.kubernetes.io/version: main
        helm.sh/chart: azimuth-capi-operator-0.1.0
      name: release-name-azimuth-capi-operator
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: release-name-azimuth-capi-operator
    subjects:
      - kind: ServiceAccount
        name: release-name-azimuth-capi-operator
        namespace: NAMESPACE
  9: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        secret.reloader.stakater.com/reload: release-name-azimuth-capi-operator-cert
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: azimuth-capi-operator
        app.kubernetes.io/version: main
        helm.sh/chart: azimuth-capi-operator-0.1.0
      name: release-name-azimuth-capi-operator
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: azimuth-capi-operator
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            azimuth.stackhpc.com/config-hash: e00d6ac405419fe1efdde055a73eab4bea2215fa6d87eb0b35dc30cc3eb04389
          labels:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: azimuth-capi-operator
        spec:
          containers:
            - image: ghcr.io/azimuth-cloud/azimuth-capi-operator:main
              imagePullPolicy: IfNotPresent
              name: operator
              ports:
                - containerPort: 8080
                  name: metrics
                  protocol: TCP
                - containerPort: 8443
                  name: webhook
                  protocol: TCP
              readinessProbe:
                failureThreshold: 1
                periodSeconds: 5
                tcpSocket:
                  port: webhook
              resources: {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: true
              volumeMounts:
                - mountPath: /etc/azimuth
                  name: etc-azimuth
                  readOnly: true
                - mountPath: /etc/azimuth/cert
                  name: etc-azimuth-cert
                  readOnly: true
                - mountPath: /tmp
                  name: tmp
          securityContext:
            runAsNonRoot: true
          serviceAccountName: release-name-azimuth-capi-operator
          volumes:
            - name: etc-azimuth
              secret:
                secretName: release-name-azimuth-capi-operator
            - name: etc-azimuth-cert
              secret:
                secretName: release-name-azimuth-capi-operator-cert
            - emptyDir: {}
              name: tmp
  10: |
    apiVersion: cert-manager.io/v1
    kind: Issuer
    metadata:
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: azimuth-capi-operator
        app.kubernetes.io/version: main
        helm.sh/chart: azimuth-capi-operator-0.1.0
      name: release-name-azimuth-capi-operator
    spec:
      selfSigned: {}
  11: |
    apiVersion: v1
    kind: Secret
    metadata:
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: azimuth-capi-operator
        app.kubernetes.io/version: main
        helm.sh/chart: azimuth-capi-operator-0.1.0
      name: release-name-azimuth-capi-operator
    stringData:
      capi-operator.yaml: |
        !include "/etc/azimuth/webhook.yaml,/etc/azimuth/user-config.yaml"
      user-config.yaml: |
        identity:
          defaultUserClusterRole:
            rules:
            - apiGroups:
              - '*'
              resources:
              - '*'
              verbs:
              - '*'
            - nonResourceURLs:
              - '*'
              verbs:
              - '*'
      webhook.yaml: |
        webhook:
          managed: false
          certfile: /etc/azimuth/cert/tls.crt
          keyfile: /etc/azimuth/cert/tls.key
  12: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: azimuth-capi-operator
        app.kubernetes.io/version: main
        helm.sh/chart: azimuth-capi-operator-0.1.0
      name: release-name-azimuth-capi-operator
    spec:
      ports:
        - name: metrics
          port: 8080
          protocol: TCP
          targetPort: metrics
        - name: webhook
          port: 443
          protocol: TCP
          targetPort: webhook
      selector:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: azimuth-capi-operator
      type: ClusterIP
  13: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: azimuth-capi-operator
        app.kubernetes.io/version: main
        helm.sh/chart: azimuth-capi-operator-0.1.0
      name: release-name-azimuth-capi-operator
  14: |
    apiVersion: admissionregistration.k8s.io/v1
    kind: ValidatingWebhookConfiguration
    metadata:
      annotations:
        cert-manager.io/inject-ca-from: NAMESPACE/release-name-azimuth-capi-operator
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: azimuth-capi-operator
        app.kubernetes.io/version: main
        helm.sh/chart: azimuth-capi-operator-0.1.0
      name: release-name-azimuth-capi-operator
    webhooks:
      - admissionReviewVersions:
          - v1
          - v1beta1
        clientConfig:
          service:
            name: release-name-azimuth-capi-operator
            namespace: NAMESPACE
            path: /validate-cluster-template
        failurePolicy: Fail
        matchPolicy: Equivalent
        name: validate-cluster-template.webhook.azimuth.stackhpc.com
        rules:
          - apiGroups:
              - azimuth.stackhpc.com
            apiVersions:
              - v1alpha1
            operations:
              - CREATE
              - UPDATE
              - DELETE
            resources:
              - clustertemplates
        sideEffects: None
      - admissionReviewVersions:
          - v1
          - v1beta1
        clientConfig:
          service:
            name: release-name-azimuth-capi-operator
            namespace: NAMESPACE
            path: /validate-cluster
        failurePolicy: Fail
        matchPolicy: Equivalent
        name: validate-cluster.webhook.azimuth.stackhpc.com
        rules:
          - apiGroups:
              - azimuth.stackhpc.com
            apiVersions:
              - v1alpha1
            operations:
              - CREATE
              - UPDATE
            resources:
              - clusters
        sideEffects: None
