cloudCredentialsSecretName: "{{ spec.cloud_credentials_secret_name }}"

controlPlane:
{% if spec.ha_control_plane %}
  machineCount: 3
{% else %}
  machineCount: 1
{% endif %}
{% if spec.control_plane_root_volume_size %}
  machineRootVolume:
    diskSize: {{ spec.control_plane_root_volume_size }}
{% endif %}
  machineFlavor: "{{ spec.control_plane_machine_size }}"
  healthCheck:
    enabled: {{ "true" if spec.autohealing else "false" }}

nodeGroupDefaults:
  healthCheck:
    enabled: {{ "true" if spec.autohealing else "false" }}

nodeGroups:
{% for node_group in spec.node_groups %}
  - name: "{{ node_group.name }}"
    machineFlavor: "{{ node_group.machine_size }}"
    autoscale: {{ "true" if node_group.autoscale else "false" }}
{% if node_group.autoscale %}
    machineCountMin: {{ node_group.min_count }}
    machineCountMax: {{ node_group.max_count }}
{% else %}
    machineCount: {{ node_group.count }}
{% endif %}
{% if node_group.root_volume_size %}
    machineRootVolume:
      diskSize: {{ node_group.root_volume_size }}
{% endif %}
{% endfor %}

addons:
  kubernetesDashboard:
    enabled: {{ "true" if spec.addons.dashboard else "false" }}
  ingress:
    enabled: {{ "true" if spec.addons.ingress else "false" }}
{% if spec.addons.ingress_controller_load_balancer_ip %}
    nginx:
      release:
        values:
          controller:
            service:
              loadBalancerIP: "{{ spec.addons.ingress_controller_load_balancer_ip }}"
{% endif %}
  monitoring:
    enabled: {{ "true" if spec.addons.monitoring else "false" }}
{% if spec.addons.monitoring %}
    kubePrometheusStack:
      release:
        values:
          alertmanager:
            alertmanagerSpec:
              storage:
                volumeClaimTemplate:
                  spec:
                    resources:
                      requests:
                        storage: {{ spec.addons.monitoring_alertmanager_volume_size }}Gi
          prometheus:
            prometheusSpec:
              storageSpec:
                volumeClaimTemplate:
                  spec:
                    resources:
                      requests:
                        storage: {{ spec.addons.monitoring_prometheus_volume_size }}Gi
    lokiStack:
      release:
        values:
          loki:
            persistence:
              size: {{ spec.addons.monitoring_loki_volume_size }}Gi
{% endif %}
